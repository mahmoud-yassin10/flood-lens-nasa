name: Refresh data every 3h & Deploy Pages (artifact)

on:
  schedule:
    - cron: "0 */3 * * *"      # every 3 hours UTC
  workflow_dispatch:

permissions:
  contents: read               # not pushing to branch
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PYTHON_ENTRY: "python -m pipeline.run_city"   # optional, we '|| true' it
  OUTPUT_DIR: "public/data"
  ALWAYS_OVERWRITE: "1"
  BRANCH_NAME: "Main"          # change to 'main' if your default branch is lowercase
  # Fallback city IDs if cities.json is missing/broken. (Matches your app IDs.)
  CITY_IDS: "alexandria gerd bahir_dar roseires sennar wad_madani khartoum jakarta manila bangkok hcmc dhaka mumbai lagos houston"

jobs:
  data:
    name: Generate fresh LIVE data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ env.BRANCH_NAME }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.BRANCH_NAME }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps (if any)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Ensure output dirs
        run: |
          mkdir -p "$OUTPUT_DIR/live"

      - name: (Optional) Run pipeline (best-effort; OK if it fails)
        shell: bash
        env:
          PYTHON_ENTRY: ${{ env.PYTHON_ENTRY }}
        run: |
          set -euo pipefail
          for CITY in $CITY_IDS; do
            echo "=== Pipeline for $CITY ==="
            $PYTHON_ENTRY --city "$CITY" --days 3 --write || true
          done

      - name: Seed/overwrite LIVE model data (what the UI reads)
        shell: bash
        env:
          OUTPUT_DIR: ${{ env.OUTPUT_DIR }}
          ALWAYS_OVERWRITE: ${{ env.ALWAYS_OVERWRITE }}
          CITY_IDS: ${{ env.CITY_IDS }}
        run: |
          python scripts/seed_live_model.py
          echo "---- LIVE files:"
          ls -1 "$OUTPUT_DIR/live" | wc -l
          ls -al "$OUTPUT_DIR/live" | sed -n '1,200p'
          echo "---- Sample:"
          head -n 40 "$OUTPUT_DIR/live/alexandria.json" || true

      - name: Upload city data artifact
        uses: actions/upload-artifact@v4
        with:
          name: city-data
          path: ${{ env.OUTPUT_DIR }}
          if-no-files-found: error
          retention-days: 3

  build:
    name: Build site with fresh data
    runs-on: ubuntu-latest
    needs: data
    steps:
      - name: Checkout ${{ env.BRANCH_NAME }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.BRANCH_NAME }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Ensure data dir
        run: mkdir -p ${{ env.OUTPUT_DIR }}

      - name: Download city data artifact
        uses: actions/download-artifact@v4
        with:
          name: city-data
          path: ${{ env.OUTPUT_DIR }}

      - name: Build (Vite copies public/ â†’ dist/)
        run: npm run build

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
